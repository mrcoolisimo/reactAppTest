{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","actions/api.js","actions/Food.js","reducers/Food.js","actions/DayTotal.js","reducers/DayTotal.js","reducers/index.js","actions/store.js","components/useForm.js","components/FoodForm.js","components/FoodChart.js","components/Foods.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","reactstrap_es","className","light","tag","Link","to","onClick","isOpen","navbar","Component","displayName","name","Layout","apply","arguments","NavMenu_NavMenu","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","_populateWeatherData","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","aria-labelledby","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","baseUrl","api","url","length","undefined","fetchAll","num","axios","get","fetchById","create","newRecord","post","update","updateRecord","put","delete","fetchDate","ACTION_TYPES","formatData","objectSpread","servings","parseInt","fats","carbs","protein","initialState","list","dispatch","then","console","log","type","payload","catch","err","iniitalState","reducers","combineReducers","Food","action","toConsumableArray","concat","x","foodID","filter","DayTotal","store","createStore","compose","applyMiddleware","thunk","useForm","initialFieldValues","validate","setCurrentId","_useState","useState","_useState2","slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","handleInputChange","e","_e$target","target","fieldValue","defineProperty","resetForm","mapActionToProps","createFood","onSuccess","res","updateFood","actions2","connect","FoodList","withStyles","theme","root","& .MuiTextField-root","margin","spacing","minWidth","formControl","smMargin","_ref","classes","objectWithoutProperties","addToast","useToasts","buttonWait","fieldValues","temp","every","_useForm","result","useEffect","currentId","find","autoComplete","noValidate","onSubmit","preventDefault","appearance","setTimeout","Grid","container","item","TextField","assign","variant","label","onChange","error","helperText","Button","arr","arr2","arr3","dates","test","unshift","totalFats","totalCarbs","test2","totalProtein","test3","datef","react_chartjs_2_es","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","position","boo","usaTime","Date","toLocaleString","timeZone","year","getFullYear","month","getMonth","day","getDate","theDayf","theDay","toDateString","fetchAllFoods","deleteFood","& .MuiTableCell-head","paper","padding","Paper","elevation","components_FoodChart","components_FoodForm","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","record","index","hover","ButtonGroup","Edit_default","color","Delete_default","window","confirm","App","react_redux_es","dist","autoDismiss","Container","maxWidth","components_Foods","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","src_App","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.42cb87b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">FoodCrud2</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n//const baseUrl = \"https://localhost:44315/api/\"\r\nconst baseUrl = \"https://mrcoolisimo.azurewebsites.net/\"\r\n\r\n\r\nexport default {\r\n    Food(url = baseUrl + 'foods/'){\r\n        return {\r\n            fetchAll : num => axios.get(url+'?num='+(num+1)),\r\n            fetchById : id => axios.get(url+id),\r\n            create : (newRecord,num) => axios.post(url+\"?num=\"+num, newRecord),\r\n            update : (id, updateRecord) => axios.put(url+id, updateRecord),\r\n            delete : id => axios.delete(url+id)\r\n        }\r\n    },\r\n    DayTotal(){\r\n        return {\r\n            fetchDate : num => axios.get(baseUrl + 'dayTotals/' + '?date=' + num)\r\n        }\r\n    }\r\n}","import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE : 'CREATE',\r\n    UPDATE : 'UPDATE',\r\n    DELETE : 'DELETE',\r\n    FETCH_ALL : 'FETCH_ALL'\r\n    //FETCH_DATE : 'FETCH_DATE'\r\n}\r\n\r\nconst formatData = data => ({\r\n    ...data,\r\n    // Change these into integers\r\n    servings : parseInt( data.servings ? data.servings : 1 ),\r\n    fats : parseInt( data.fats ? data.fats : 0 ),\r\n    carbs : parseInt( data.carbs ? data.carbs : 0 ),\r\n    protein : parseInt( data.protein ? data.protein : 0 )\r\n})\r\n\r\n\r\n\r\nexport const fetchAll = (num) => dispatch =>\r\n{\r\n    // #3 Get the URL, perform action (get, post)\r\n    api.Food().fetchAll(num)\r\n    .then(response => {\r\n        // #4 Send this to the reducer\r\n            dispatch({\r\n                type : ACTION_TYPES.FETCH_ALL,\r\n                payload : response.data\r\n            })\r\n        }\r\n    )\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess, num) => dispatch =>{\r\n    data = formatData(data)\r\n    console.log(\"create\", data)\r\n    api.Food().create(data,num)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload:res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (foodID, data, onSuccess) => dispatch =>{\r\n    data = formatData(data)\r\n    console.log('edit',data)\r\n    api.Food().update(foodID, data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            //Add the id to send with data (id:id == id)\r\n            payload: {foodID,...data}\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const Delete = (foodID, onSuccess) => dispatch =>{\r\n    api.Food().delete(foodID)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            //Add the id to send with data (id:id == id)\r\n            payload: foodID\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}","import { ACTION_TYPES } from \"../actions/Food\";\r\n\r\nconst initialState = {\r\n    list:[]\r\n}\r\n\r\n\r\nexport const Food = (state=initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            // #5 Store the data we got from the action into the list\r\n            return {\r\n                //...state,\r\n                list:[...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list : [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list : state.list.map(x => x.foodID == action.payload.foodID ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list : state.list.filter(x => x.foodID != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    FETCH_DATE : 'FETCH_DATE'\r\n}\r\n\r\nexport const fetchDate = (num) => dispatch =>\r\n{\r\n    // #3 Get the URL, perform action (get, post)\r\n    api.DayTotal().fetchDate(num)\r\n    .then(response => {\r\n        // #4 Send this to the reducer\r\n            console.log('hey',response)\r\n            dispatch({\r\n                type : ACTION_TYPES.FETCH_DATE,\r\n                payload : response.data\r\n            })\r\n        }\r\n    )\r\n    .catch(err => console.log(err))\r\n}","import { ACTION_TYPES } from \"../actions/DayTotal\";\r\n\r\nconst iniitalState = {\r\n    list:[]\r\n}\r\n\r\nexport const DayTotal = (state=iniitalState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_DATE:\r\n            // #5 Store the data we got from the action into the list\r\n            return {\r\n                //...state,\r\n                list:[...action.payload] \r\n            }\r\n        \r\n        default:\r\n            return state\r\n        }   \r\n}","import { combineReducers } from \"redux\";\r\nimport { Food } from \"./Food\";\r\nimport { DayTotal } from \"./DayTotal\";\r\n\r\nexport const reducers = combineReducers({\r\n    Food,\r\n    DayTotal\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = {[name]: value}\r\n        //const fieldValue = { [name]: value }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Grid, TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Food\";\r\nimport * as actions2 from \"../actions/DayTotal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(10),\r\n            minWidth: 230,\r\n        },\r\n        smMargin: {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n})\r\n\r\nconst initialFieldValues ={\r\n    name: '',\r\n    servings: '',\r\n    fats: '',\r\n    carbs: '' ,\r\n    protein: ''\r\n}\r\n\r\n\r\n\r\nconst FoodForm = ({classes, ...props}) => {\r\n\r\n    var num = props.num\r\n    \r\n    const { addToast } = useToasts()\r\n\r\n    function buttonWait() {\r\n        props.fetchDate(num)\r\n      }\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp={...errors}\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n        if ('fats' in fieldValues)\r\n            temp.fats = (fieldValues.fats >= 0) ? \"\" : \"This field must be a positive number\"\r\n        if ('carbs' in fieldValues)\r\n            temp.carbs = (fieldValues.carbs >= 0) ? \"\" : \"This field must be a positive number\"\r\n        if ('protein' in fieldValues)\r\n            temp.protein = (fieldValues.protein >= 0) ? \"\" : \"This field must be a positive number\"    \r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x==\"\")\r\n    }\r\n\r\n    const {\r\n        values, \r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } =useForm(initialFieldValues,validate, props.setCurrentId)\r\n\r\n    const result = (parseInt( values.fats ? values.fats : 0)*9 + \r\n                   parseInt( values.carbs ? values.carbs : 0)*4 +\r\n                   parseInt( values.protein ? values.protein : 0)*4)*\r\n                   parseInt( values.servings ? values.servings : 1)\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(validate()){\r\n            const onSuccess = () => {\r\n                resetForm()\r\n                addToast(\"Submitted Successfully!\", {appearance:'success'})\r\n                \r\n            }\r\n            if(props.currentId==0) {\r\n                props.createFood(values, onSuccess, num)\r\n                setTimeout(buttonWait, 2000)\r\n            }\r\n            else\r\n                props.updateFood(props.currentId, values, onSuccess)\r\n                setTimeout(buttonWait, 1000)\r\n                \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(props.currentId != 0)\r\n            setValues({\r\n                ...props.FoodList.find(x => x.foodID == props.currentId)\r\n            })\r\n            setErrors({})\r\n    },[props.currentId])\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes} onSubmit={handleSubmit}>\r\n            <Grid container className = \"\">\r\n                <Grid item className = \"width-full\">\r\n                    <div className = \"margin-center\">\r\n                    <TextField \r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    label=\"Name\"\r\n                    value={values.name}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-full\"\r\n                    //error={true}\r\n                    //helperText={errors.name}\r\n                    {...(errors.name && {error:true, helperText:errors.name})}\r\n                    />\r\n                    <TextField \r\n                    name=\"servings\"\r\n                    variant=\"outlined\"\r\n                    label=\"Servings\"\r\n                    value={values.servings}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-full\"\r\n                    //error={true}\r\n                    //helperText={errors.name}\r\n                    //{...(errors.name && {error:true, helperText:errors.name})}\r\n                    />\r\n                    </div>\r\n                    <div className=\"margin-center\">\r\n                    <TextField \r\n                    name=\"fats\"\r\n                    variant=\"outlined\"\r\n                    label=\"Fats\"\r\n                    value={values.fats}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.fats && {error:true, helperText:errors.fats})}\r\n                    />\r\n                    <TextField \r\n                    name=\"carbs\"\r\n                    variant=\"outlined\"\r\n                    label=\"Carbs\"\r\n                    value={values.carbs}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.carbs && {error:true, helperText:errors.carbs})}\r\n                    />\r\n                    <TextField \r\n                    name=\"protein\"\r\n                    variant=\"outlined\"\r\n                    label=\"Protein\"\r\n                    value={values.protein}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.protein && {error:true, helperText:errors.protein})}\r\n                    />\r\n                    </div>\r\n                    <div className = \"centerText\">\r\n                        Calories (estimate): {result}\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"vertical-pad\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className='float-left width-half green vertical-pad'\r\n                        >\r\n                                Submit\r\n                        </Button>\r\n                        <Button\r\n                            className='float-right width-half grey vertical-pad'\r\n                            variant=\"contained\"\r\n                            onClick={resetForm}\r\n                        >\r\n                                Reset\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    FoodList : state.Food.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    // #2\r\n    createFood : actions.create,\r\n    updateFood : actions.update,\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(FoodForm));","import React,{useState,useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as actions2 from \"../actions/DayTotal\";\r\n\r\nvar arr = []\r\nvar arr2 = []\r\nvar arr3 = []\r\nvar dates = []\r\n\r\nvar test = (data) => {\r\n    arr = []\r\n    for (var item in data) {\r\n            arr.unshift(data[item].totalFats);\r\n    }\r\n    console.log('data',data)\r\n    return arr;\r\n}\r\n\r\nvar test2 = (data) => {\r\n    arr2 = []\r\n    for (var item in data) {\r\n            arr2.unshift(data[item].totalCarbs);\r\n    }\r\n    return arr2;\r\n}\r\n\r\nvar test3 = (data) => {\r\n  arr3 = []\r\n  for (var item in data) {\r\n          arr3.unshift(data[item].totalProtein);\r\n  }\r\n  return arr3;\r\n}\r\n\r\nvar datef = (data) => {\r\n    dates = []\r\n    for (var item in data) {\r\n        //console.log(data)\r\n        dates.unshift(data[(item)].date);\r\n    }\r\n    \r\n    return dates;\r\n}\r\n\r\nconst FoodChart = ({classes, ...props}) => {\r\n      return (\r\n        arr = test(props.DayTotal),\r\n        arr2 = test2(props.DayTotal),\r\n        arr3 = test3(props.DayTotal),\r\n        dates = datef(props.DayTotal),\r\n        console.log('dates', dates),\r\n        <div>\r\n          <Line\r\n            data={{labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'Fats',\r\n                        fill: false,\r\n                        lineTension: 0,\r\n                        backgroundColor: 'rgba(154, 223, 65,1)',\r\n                        borderColor: 'rgba(154, 223, 65,1)',\r\n                        borderWidth: 2,\r\n                        data: arr\r\n                    },\r\n                    {\r\n                        label: 'Carbs',\r\n                        fill: false,\r\n                        lineTension: 0,\r\n                        backgroundColor: 'rgba(233, 163, 58,1)',\r\n                        borderColor: 'rgba(233, 163, 58,1)',\r\n                        borderWidth: 2,\r\n                        data: arr2\r\n                    },\r\n                    {\r\n                      label: 'Protein',\r\n                      fill: false,\r\n                      lineTension: 0,\r\n                      backgroundColor: 'rgba(50, 219, 197,1)',\r\n                      borderColor: 'rgba(50, 219, 197,1)',\r\n                      borderWidth: 2,\r\n                      data: arr3\r\n                  }\r\n                ]\r\n            }}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text:'Macronutrient Data in Last 7 Days',\r\n                fontSize:20\r\n              },\r\n              legend:{\r\n                display:true,\r\n                position:'right'\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    DayTotal : state.DayTotal.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    // #2\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(FoodChart, test);","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Food\";\r\nimport * as actions2 from \"../actions/DayTotal\";\r\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport FoodForm from \"./FoodForm\";\r\nimport FoodChart from \"./FoodChart\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDefaultFormatCodeSettings } from \"typescript\";\r\nimport { getCurrentDate } from '../utils/getCurrentDate';\r\n\r\n// fetchAllFoods => Action => API => Reducer => back here\r\n\r\nconst styles = theme =>({\r\n    root:{\r\n        \"& .MuiTableCell-head\":{\r\n            fontSize:\"1.25rem\"\r\n        }\r\n    },\r\n    paper : {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    }\r\n})\r\n// var date = Date(Date.now()).split('T')[0];\r\n\r\nvar num = 0\r\nvar boo = false\r\nfunction buttonWait() {\r\n    boo = false\r\n  }\r\n\r\nvar usaTime = new Date().toLocaleString(\"en-US\", {timeZone: \"America/New_York\"});\r\nconst date = new Date(usaTime);\r\nconst year = date.getFullYear();\r\nconst month = date.getMonth();\r\nconst day = date.getDate();\r\n\r\nfunction theDayf (num) {\r\n    var f = new Date(year, month, day  + num) // PLUS 1 DAY\r\n    return f;\r\n}\r\n\r\nvar theDay = theDayf(num).toDateString()\r\n\r\nconst Foods = ({classes,...props}) => {\r\n    const [currentId,setCurrentId] = useState(0)\r\n    \r\n    useEffect(()=>{\r\n        // #1\r\n        props.fetchAllFoods(num)\r\n        props.fetchDate(num)\r\n        \r\n    },[])//componentDidMount \r\n    \r\n    const { addToast } = useToasts()\r\n\r\n    const onFetchAdd = () => {\r\n        if (!boo) {\r\n            boo = true\r\n            num += 1\r\n            theDay = theDayf(num).toDateString()\r\n            props.fetchAllFoods(num)\r\n            props.fetchDate(num)\r\n        }\r\n        setTimeout(buttonWait, 250)\r\n    }\r\n    const onFetchSubtract = () => {\r\n        if (!boo) {\r\n            boo = true\r\n            num -= 1\r\n            theDay = theDayf(num).toDateString()\r\n            props.fetchAllFoods(num)\r\n            props.fetchDate(num)\r\n        }\r\n        setTimeout(buttonWait, 250)\r\n    }\r\n\r\n    const onDelete = foodID => {\r\n        if(window.confirm('Are you sure you want to delete this?'))\r\n            props.deleteFood(foodID, () => addToast(\"Deleted Successfully!\", {appearance:'info'}))\r\n    }\r\n\r\n    const result = (record) => {\r\n        return(\r\n            (parseInt( record.fats ? record.fats : 0)*9 + \r\n            parseInt( record.carbs ? record.carbs : 0)*4 +\r\n            parseInt( record.protein ? record.protein : 0)*4)*\r\n            parseInt(record.servings ? record.servings : 1)\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n    <Paper className={classes.paper} elevation={5}>\r\n        \r\n        <div className=\"margin-tenth\">\r\n            <Button\r\n                variant=\"contained\"\r\n                className='float-left width-fourth blue'\r\n                onClick={onFetchSubtract}\r\n            >\r\n               {\"<=\"} Prev\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                className='float-right width-fourth blue'\r\n                onClick={onFetchAdd}\r\n            >\r\n                Next {\"=>\"}\r\n            </Button>\r\n        </div>\r\n        <div className = \"centerText font24 bold\">{theDay}</div>\r\n        <br /> <br />\r\n        <FoodChart />\r\n        <br /><br /><br />\r\n        <FoodForm {...({currentId,setCurrentId,num})}/>\r\n        <br /><br /><br />\r\n\r\n        <Grid container>\r\n            <Grid item className = \"width-full\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead className={classes.root}>\r\n                            <TableRow>\r\n                                <TableCell>Name (Servings)</TableCell>\r\n                                <TableCell>Fats</TableCell>\r\n                                <TableCell>Carbs</TableCell>\r\n                                <TableCell>Protein</TableCell>\r\n                                <TableCell>Calories</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                // #7 the list is ouput to the page\r\n                                props.FoodList.map((record,index)=>{\r\n                                    return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.name} ({record.servings})</TableCell>\r\n                                            <TableCell>{record.fats * record.servings}</TableCell>\r\n                                            <TableCell>{record.carbs * record.servings}</TableCell>\r\n                                            <TableCell>{record.protein * record.servings}</TableCell>\r\n                                            <TableCell>{result(record)}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={() => { setCurrentId(record.foodID) }}/></Button>\r\n                                                    <Button><DeleteIcon color=\"secondary\"\r\n                                                    onClick={() => onDelete(record.foodID) }/></Button>\r\n                                                </ButtonGroup> \r\n                                            </TableCell>\r\n                                        </TableRow>)  \r\n                                })\r\n                            }\r\n                            </TableBody>\r\n                    </Table>\r\n                    \r\n                    \r\n                    {/* <Table>\r\n                        <TableHead className={classes.root}>\r\n                            <TableRow>\r\n                                <TableCell>Total Fats</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                // #7 the list is ouput to the page\r\n                                props.DayTotal.map((record,index)=>{\r\n                                    return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.totalFats}</TableCell>\r\n                                        </TableRow>)\r\n                                })\r\n                            }\r\n                            </TableBody>\r\n                        </Table> */}\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    FoodList : state.Food.list,\r\n    DayTotal : state.DayTotal.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    // #2\r\n    fetchAllFoods : actions.fetchAll,\r\n    deleteFood : actions.Delete,\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(Foods));","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { store } from \"./actions/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport './custom.css'\r\nimport Foods from './components/Foods';\r\nimport { Container } from \"@material-ui/core\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\n\r\n/*\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n      </Layout>\r\n    );\r\n  }\r\n}*/\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ToastProvider autoDismiss={true}>\r\n        <Container maxWidth=\"lg\">\r\n          <Foods />\r\n        </Container>\r\n      </ToastProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n        {/*<Route path=\"/app/\" component={App} />*/}\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}